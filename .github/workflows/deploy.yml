name: Build and Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build React and Deploy via SSH
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Check client folder content
      run: ls -la ./client

    - name: Install client dependencies
      working-directory: ./client
      run: npm install

    - name: Build React App
      working-directory: ./client
      run: npm run build

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Add server to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
    - name: Ensure destination directory exists
      run: |
        ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} \
        "mkdir -p ~/node-react-with-mongodb/client/build"
    - name: Rsync build folder
      run: |
        rsync -avz --delete ./client/build/ \
        ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/***/node-react-with-mongodb/client/build/
    - name: Rsync build and server files to remote
      run: |
        rsync -avz --delete \
          ./client/build/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/ubuntu/node-react-with-mongodb/client/build

        rsync -avz --exclude='.git*' ./server/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/ubuntu/node-react-with-mongodb/server

        rsync -avz docker-compose.yml Caddyfile ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/ubuntu/node-react-with-mongodb/

    - name: Run Docker Compose on Remote
      run: |
        ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
          cd /home/ubuntu/node-react-with-mongodb
          sudo docker-compose down
          sudo docker-compose pull
          sudo docker-compose build
          sudo docker-compose up -d
        EOF
